abstract class Shape {
  void area(); // Abstract method
}

class Circle extends Shape {
  double radius;

  Circle(this.radius);

  @override
  void area() {             
    print("Area of Circle: ${3.14 * radius * radius}");
  }
}

class Rectangle extends Shape {
  double width, height;

  Rectangle(this.width, this.height);

  @override
  void area() {
    print("Area of Rectangle: ${width * height}");
  }
}

void main() {
  Shape shape1 = Circle(5);
  Shape shape2 = Rectangle(4, 6);

  shape1.area();  
  shape2.area(); 
}

/*
‚úÖ Why did we use abstract in this code?
üî∏ Abstract class means incomplete or blueprint only.
It defines structure, but doesn‚Äôt provide full implementation.
It can have abstract methods (methods without a body).

‡¶ï‡ßá‡¶® abstract ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá?
abstract ‡¶Æ‡¶æ‡¶®‡ßá: ‡¶Ö‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡•§
‡¶è‡¶ü‡¶æ ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏, ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶™‡ßÅ‡¶∞‡ßã‡¶™‡ßÅ‡¶∞‡¶ø implement ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡¶®‡¶ø‡•§
‡¶è‡¶§‡ßá abstract methods ‡¶•‡¶æ‡¶ï‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‚Äî‡¶Ø‡¶æ‡¶∞ body ‡¶•‡¶æ‡¶ï‡ßá ‡¶®‡¶æ, ‡¶∂‡ßÅ‡¶ß‡ßÅ method-‡¶è‡¶∞ declaration ‡¶•‡¶æ‡¶ï‡ßá‡•§

---------------------------------

‡¶è‡¶á ‡¶ï‡ßã‡¶°‡ßá abstract class Shape ‡¶ï‡ßá‡¶® ‡¶≤‡¶æ‡¶ó‡¶õ‡ßá?

1Ô∏è‚É£ Common Structure Define ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
Shape ‡¶π‡¶≤ ‡¶è‡¶ï‡¶ü‡¶æ base structure, ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶® ‡¶•‡ßá‡¶ï‡ßá Circle, Rectangle ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø inherit ‡¶ï‡¶∞‡¶¨‡ßá‡•§
area() method ‡¶Ü‡¶õ‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶ï‡¶ø ‡¶≠‡¶æ‡¶¨‡ßá area ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßá, ‡¶∏‡ßá‡¶ü‡¶æ Shape ‡¶ú‡¶æ‡¶®‡ßá ‡¶®‡¶æ‡•§
 ‡¶è‡¶ü‡¶æ Circle ‡¶Ü‡¶∞ Rectangle ‡¶è‡¶∞ ‡¶¶‡¶æ‡ßü‡¶ø‡¶§‡ßç‡¶¨!

2Ô∏è‚É£ Force ‡¶ï‡¶∞‡ßá ‡¶¨‡¶≤‡¶õ‡ßá Subclass ‡¶ó‡ßÅ‡¶≤‡ßã area() implement ‡¶ï‡¶∞‡¶¨‡ßá!
Shape ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ ‡¶¨‡¶≤‡¶õ‡ßá:
"‡¶§‡ßã‡¶Æ‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶∞ subclass ‡¶π‡¶¨‡ßá (‡¶Ø‡ßá‡¶Æ‡¶®: Circle, Rectangle), ‡¶§‡ßã‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ area() define ‡¶ï‡¶∞‡¶§‡ßá‡¶á ‡¶π‡¶¨‡ßá‡•§"

---------------------------
3Ô∏è‚É£ Object Creation Restrict ‡¶ï‡¶∞‡ßá
abstract class-‡¶è‡¶∞ object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü ‡¶®‡¶æ‡•§
‡¶è‡¶ü‡¶æ ‡¶∂‡ßÅ‡¶ß‡ßÅ subclass-‡¶¶‡ßá‡¶∞ guide ‡¶ï‡¶∞‡ßá‡•§
Example:

abstract class Vehicle {
  void move();
}
Vehicle v = Vehicle(); // ‚ùå Error! Abstract class can't be instantiated.


‚≠ê Real Life Example:
abstract class ‚Üí "Contract" / "Rulebook"
‚û°Ô∏è ‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶ê class extend ‡¶ï‡¶∞‡¶¨‡ßá, ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶®‡¶ø‡ßü‡¶Æ ‡¶Æ‡¶æ‡¶®‡¶§‡ßá‡¶á ‡¶π‡¶¨‡ßá‡•§


*/